{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#google-ads-report","title":"google-ads-report","text":"<p>Easier to use</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Get report from Google Ads API in Stream</li> <li>Something else</li> </ul>"},{"location":"api/","title":"Modules","text":""},{"location":"api/#google_ads_report.google_ads_client.GoogleAdsApiClient","title":"<code>GoogleAdsApiClient</code>","text":"<p>             Bases: <code>BaseClient</code></p> Source code in <code>google_ads_report/google_ads_client.py</code> <pre><code>class GoogleAdsApiClient(BaseClient):\n    def __init__(self, credentials: dict = None, credentials_path: str = None, version: str = \"v14\"):\n\"\"\"\n        Args:\n            credentials: A dictionary of credentials for the Google Ads API.\n            credentials_path: The path to a JSON file containing credentials for the Google Ads API.\n            version: The version of the Google Ads API to use.\n\n        Returns:\n            An instance of the GoogleAdsApiClient class.\n\n        Author:\n            minhpc@ikameglobal.com\n        \"\"\"\n        super().__init__(version)\n\n        if not credentials_path and not credentials:\n            raise ValueError(\"Either credentials or credentials_path must be provided.\")\n\n        if not credentials:\n            with open(credentials_path, 'r') as f:\n                credentials = json.load(f)\n\n        self.client = GoogleAdsClient.load_from_dict(credentials, version)\n        self.ads_service = self.client.get_service(\"GoogleAdsService\")\n        self.version = version\n\n    def get_response_batch(self, customer_id: str, query: str) -&gt; Iterator[dict]:\n\"\"\"\n        Returns a generator of batches of results from the Google Ads API.\n\n        Args:\n            customer_id: The Google Ads customer ID.\n            query: The query to run against the Google Ads API.\n\n        Returns:\n            A generator of batches of results from the Google Ads API.\n        \"\"\"\n        stream = self.ads_service.search_stream(customer_id=customer_id,\n                                                query=query)\n        for batch in stream:\n            batch_result = []\n            for row in batch.results:\n                row = json_format.MessageToDict(row)\n                batch_result.append(row)\n            yield batch_result\n\n    def get_response(self, customer_id: str, query: str) -&gt; list:\n\"\"\"\n        Returns a list of results from the Google Ads API.\n\n        Args:\n            customer_id: The Google Ads customer ID.\n            query: The query to run against the Google Ads API.\n\n        Returns:\n            A list of results from the Google Ads API.\n        \"\"\"\n        stream = self.ads_service.search_stream(customer_id=customer_id,\n                                                query=query)\n        result = []\n        for batch in stream:\n            for row in batch.results:\n                row = json_format.MessageToDict(row)\n                result.append(row)\n        return result\n</code></pre>"},{"location":"api/#google_ads_report.google_ads_client.GoogleAdsApiClient.__init__","title":"<code>__init__(credentials=None, credentials_path=None, version='v14')</code>","text":"<p>Parameters:</p> Name Type Description Default <code>credentials</code> <code>dict</code> <p>A dictionary of credentials for the Google Ads API.</p> <code>None</code> <code>credentials_path</code> <code>str</code> <p>The path to a JSON file containing credentials for the Google Ads API.</p> <code>None</code> <code>version</code> <code>str</code> <p>The version of the Google Ads API to use.</p> <code>'v14'</code> <p>Returns:</p> Type Description <p>An instance of the GoogleAdsApiClient class.</p> Author <p>minhpc@ikameglobal.com</p> Source code in <code>google_ads_report/google_ads_client.py</code> <pre><code>def __init__(self, credentials: dict = None, credentials_path: str = None, version: str = \"v14\"):\n\"\"\"\n    Args:\n        credentials: A dictionary of credentials for the Google Ads API.\n        credentials_path: The path to a JSON file containing credentials for the Google Ads API.\n        version: The version of the Google Ads API to use.\n\n    Returns:\n        An instance of the GoogleAdsApiClient class.\n\n    Author:\n        minhpc@ikameglobal.com\n    \"\"\"\n    super().__init__(version)\n\n    if not credentials_path and not credentials:\n        raise ValueError(\"Either credentials or credentials_path must be provided.\")\n\n    if not credentials:\n        with open(credentials_path, 'r') as f:\n            credentials = json.load(f)\n\n    self.client = GoogleAdsClient.load_from_dict(credentials, version)\n    self.ads_service = self.client.get_service(\"GoogleAdsService\")\n    self.version = version\n</code></pre>"},{"location":"api/#google_ads_report.google_ads_client.GoogleAdsApiClient.get_response","title":"<code>get_response(customer_id, query)</code>","text":"<p>Returns a list of results from the Google Ads API.</p> <p>Parameters:</p> Name Type Description Default <code>customer_id</code> <code>str</code> <p>The Google Ads customer ID.</p> required <code>query</code> <code>str</code> <p>The query to run against the Google Ads API.</p> required <p>Returns:</p> Type Description <code>list</code> <p>A list of results from the Google Ads API.</p> Source code in <code>google_ads_report/google_ads_client.py</code> <pre><code>def get_response(self, customer_id: str, query: str) -&gt; list:\n\"\"\"\n    Returns a list of results from the Google Ads API.\n\n    Args:\n        customer_id: The Google Ads customer ID.\n        query: The query to run against the Google Ads API.\n\n    Returns:\n        A list of results from the Google Ads API.\n    \"\"\"\n    stream = self.ads_service.search_stream(customer_id=customer_id,\n                                            query=query)\n    result = []\n    for batch in stream:\n        for row in batch.results:\n            row = json_format.MessageToDict(row)\n            result.append(row)\n    return result\n</code></pre>"},{"location":"api/#google_ads_report.google_ads_client.GoogleAdsApiClient.get_response_batch","title":"<code>get_response_batch(customer_id, query)</code>","text":"<p>Returns a generator of batches of results from the Google Ads API.</p> <p>Parameters:</p> Name Type Description Default <code>customer_id</code> <code>str</code> <p>The Google Ads customer ID.</p> required <code>query</code> <code>str</code> <p>The query to run against the Google Ads API.</p> required <p>Returns:</p> Type Description <code>Iterator[dict]</code> <p>A generator of batches of results from the Google Ads API.</p> Source code in <code>google_ads_report/google_ads_client.py</code> <pre><code>def get_response_batch(self, customer_id: str, query: str) -&gt; Iterator[dict]:\n\"\"\"\n    Returns a generator of batches of results from the Google Ads API.\n\n    Args:\n        customer_id: The Google Ads customer ID.\n        query: The query to run against the Google Ads API.\n\n    Returns:\n        A generator of batches of results from the Google Ads API.\n    \"\"\"\n    stream = self.ads_service.search_stream(customer_id=customer_id,\n                                            query=query)\n    for batch in stream:\n        batch_result = []\n        for row in batch.results:\n            row = json_format.MessageToDict(row)\n            batch_result.append(row)\n        yield batch_result\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install google-ads-report, run this command in your terminal:</p> <pre><code>pip install google-ads-report\n</code></pre> <p>This is the preferred method to install google-ads-report, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-source","title":"From source","text":"<p>The source for google-ads-report can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>git clone git://github.com/ikameglobal/google-ads-report\n</code></pre> <p>Or download the tarball:</p> <pre><code>curl -OJL https://github.com/ikameglobal/google-ads-report/tarball/main\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>pip install .\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>For more information about the API (query syntax, available data), see the Google Ads API.</p>"},{"location":"usage/#reporting-api","title":"Reporting API","text":""},{"location":"usage/#get-report-in-batch","title":"Get report in batch","text":"<pre><code>from google_ads_report import GoogleAdsApiClient\n\nclient = GoogleAdsApiClient(credentials_path='&lt;path-to-credentials&gt;')\n\nquery = f\"\"\"\n        SELECT\n            asset.id,\n            asset.name,\n            asset.type,\n            asset.text_asset.text,\n            asset.youtube_video_asset.youtube_video_title,\n            asset.youtube_video_asset.youtube_video_id,\n            asset.image_asset.full_size.url\n        FROM asset\n        \"\"\"\nresult = []\nfor batch in client.get_response_batch(customer_id='2865142845', query=query):\n    result.extend(batch)\nprint(result)\n</code></pre>"},{"location":"usage/#more-examples","title":"More examples","text":""}]}